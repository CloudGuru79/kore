---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    name: api
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 10080
    targetPort: 10080
  sessionAffinity: ClientIP
  selector:
    name: api
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: api
        service: api
      annotations:
        prometheus.io/port: "10080"
        prometheus.io/scheme: "http"
        prometheus.io/scrape: "true"
    spec:
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
      containers:
      - name: api
        image: quay.io/appvia/hub-apiserver:latest
        ports:
          - name: http
            containerPort: 10080
        env:
          - name: ENABLE_DEX
            value: "true"
          - name: HUB_AUTHENTICATION_PLUGINS
            value: admintoken,basicauth,openid
          - name: HUB_CERTIFICATE_AUTHORITY
            value: /tls/tls.crt
          - name: HUB_CERTIFICATE_AUTHORITY_KEY
            value: /tls/tls.key
          - name: HUB_CLIENT_ID
            value: broker
          - name: HUB_CLIENT_SCOPES
            value: email,profile
          - name: KUBE_API_SERVER
            value: http://apiserver:8080
            # the admin password for kore 
          - name: HUB_ADMIN_PASS
            valueFrom: 
              secretKeyRef: 
                name: kore 
                key: kore.admin.pass
          - name: HUB_API_PUBLIC_URL
            # the external url for the api
            valueFrom:
              secretKeyRef: 
                name: kore 
                key: kore.api.url
          - name: HUB_DISCOVERY_URL
            # the external url for dex 
            valueFrom:
              secretKeyRef: 
                name: kore 
                key: kore.api.sso
          - name: HUB_ADMIN_TOKEN
            # a random string used for admintoken plugin
            valueFrom: 
              secretKeyRef: 
                name: kore 
                key: kore.admin.token
          - name: USERS_DB_URL
            valueFrom: 
            # DSN value: "root:some_password@tcp(db:3306)/hub?parseTime=true"
              secretKeyRef: 
                name: kore
                key: kore.db.url
          - name: HUB_HMAC
            # a random string used for a hmac
            valueFrom: 
              secretKeyRef: 
                name: kore 
                key: kore.hmac
          - name: HUB_CLIENT_SECRET
            # openid client secret
            valueFrom: 
              secretKeyRef: 
                name: kore
                key: oauth.client_secret
        volumeMounts:
          - name: certs
            readOnly: true
            mountPath: /tls
      volumes:
      - name: certs
        secret:
          secretName: tls