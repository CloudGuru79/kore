
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: kubernetescredentials.clusters.compute.kore.appvia.io
spec:
  group: clusters.compute.kore.appvia.io
  names:
    kind: KubernetesCredentials
    listKind: KubernetesCredentialsList
    plural: kubernetescredentials
    singular: kubernetescredentials
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KubernetesCredentials is the Schema for the roles API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KubernetesCredentialsSpec defines the desired state of Cluster
          properties:
            caCertificate:
              description: CaCertificate is the certificate authority used by the
                cluster
              type: string
            endpoint:
              description: Endpoint is the kubernetes endpoint
              minLength: 1
              type: string
            token:
              description: Token is a service account token bound to cluster-admin
                role
              minLength: 1
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
