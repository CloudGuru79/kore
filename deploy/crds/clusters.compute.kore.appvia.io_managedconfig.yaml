
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: managedconfig.clusters.compute.kore.appvia.io
spec:
  group: clusters.compute.kore.appvia.io
  names:
    kind: ManagedConfig
    listKind: ManagedConfigList
    plural: managedconfig
    singular: managedconfig
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ManagedConfig is the Schema for the roles API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ManagedConfigSpec defines the configuration for a cluster
          properties:
            certificateAuthority:
              description: CertificateAuthority is the location of the API certificate
                authority
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                  type: string
                data:
                  additionalProperties:
                    format: byte
                    type: string
                  description: Data contains the secret data. Each key must consist
                    of alphanumeric characters, '-', '_' or '.'. The serialized form
                    of the secret data is a base64 encoded string, representing the
                    arbitrary (possibly non-string) data value here. Described in
                    https://tools.ietf.org/html/rfc4648#section-4
                  type: object
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                metadata:
                  description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                  type: object
                stringData:
                  additionalProperties:
                    type: string
                  description: stringData allows specifying non-binary secret data
                    in string form. It is provided as a write-only convenience method.
                    All keys and values are merged into the data field on write, overwriting
                    any existing values. It is never output when reading from the
                    API.
                  type: object
                type:
                  description: Used to facilitate programmatic handling of secret
                    data.
                  type: string
              type: object
            clientCertificate:
              description: ClientCertificate is the location of the client certificate
                to speck back to the API
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                  type: string
                data:
                  additionalProperties:
                    format: byte
                    type: string
                  description: Data contains the secret data. Each key must consist
                    of alphanumeric characters, '-', '_' or '.'. The serialized form
                    of the secret data is a base64 encoded string, representing the
                    arbitrary (possibly non-string) data value here. Described in
                    https://tools.ietf.org/html/rfc4648#section-4
                  type: object
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                metadata:
                  description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                  type: object
                stringData:
                  additionalProperties:
                    type: string
                  description: stringData allows specifying non-binary secret data
                    in string form. It is provided as a write-only convenience method.
                    All keys and values are merged into the data field on write, overwriting
                    any existing values. It is never output when reading from the
                    API.
                  type: object
                type:
                  description: Used to facilitate programmatic handling of secret
                    data.
                  type: string
              type: object
            domain:
              description: Domain is the domain name for this cluster
              minLength: 5
              type: string
          type: object
        status:
          description: ManagedConfigStatus defines the observed state of Cluster
          properties:
            conditions:
              description: Conditions is a set of condition which has caused an error
              items:
                description: Condition is a reason why something failed
                properties:
                  detail:
                    description: Detail is a actual error which might contain technical
                      reference
                    type: string
                  message:
                    description: Message is a human readable message
                    type: string
                required:
                - detail
                - message
                type: object
              type: array
            phase:
              description: Phase indicates the phase of the cluster
              type: string
            status:
              description: Status is overall status of the workspace
              type: string
          required:
          - phase
          - status
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
