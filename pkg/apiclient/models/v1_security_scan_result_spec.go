// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1SecurityScanResultSpec v1 security scan result spec
//
// swagger:model v1.SecurityScanResultSpec
type V1SecurityScanResultSpec struct {

	// archived at
	ArchivedAt string `json:"archivedAt,omitempty"`

	// checked at
	CheckedAt string `json:"checkedAt,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// overall status
	OverallStatus string `json:"overallStatus,omitempty"`

	// owning team
	OwningTeam string `json:"owningTeam,omitempty"`

	// resource Api version
	ResourceAPIVersion string `json:"resourceApiVersion,omitempty"`

	// resource kind
	ResourceKind string `json:"resourceKind,omitempty"`

	// resource name
	ResourceName string `json:"resourceName,omitempty"`

	// resource namespace
	ResourceNamespace string `json:"resourceNamespace,omitempty"`

	// results
	Results []*V1SecurityScanRuleResult `json:"results"`
}

// Validate validates this v1 security scan result spec
func (m *V1SecurityScanResultSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResults(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1SecurityScanResultSpec) validateResults(formats strfmt.Registry) error {

	if swag.IsZero(m.Results) { // not required
		return nil
	}

	for i := 0; i < len(m.Results); i++ {
		if swag.IsZero(m.Results[i]) { // not required
			continue
		}

		if m.Results[i] != nil {
			if err := m.Results[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("results" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1SecurityScanResultSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1SecurityScanResultSpec) UnmarshalBinary(b []byte) error {
	var res V1SecurityScanResultSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
