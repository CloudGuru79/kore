// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// UpdateGKECredentialReader is a Reader for the UpdateGKECredential structure.
type UpdateGKECredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGKECredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateGKECredentialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewUpdateGKECredentialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateGKECredentialOK creates a UpdateGKECredentialOK with default headers values
func NewUpdateGKECredentialOK() *UpdateGKECredentialOK {
	return &UpdateGKECredentialOK{}
}

/*UpdateGKECredentialOK handles this case with default header values.

Contains the former team definition from the kore
*/
type UpdateGKECredentialOK struct {
	Payload *models.V1alpha1GKECredentials
}

func (o *UpdateGKECredentialOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/gkecredentials/{name}][%d] updateGKECredentialOK  %+v", 200, o.Payload)
}

func (o *UpdateGKECredentialOK) GetPayload() *models.V1alpha1GKECredentials {
	return o.Payload
}

func (o *UpdateGKECredentialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1alpha1GKECredentials)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGKECredentialInternalServerError creates a UpdateGKECredentialInternalServerError with default headers values
func NewUpdateGKECredentialInternalServerError() *UpdateGKECredentialInternalServerError {
	return &UpdateGKECredentialInternalServerError{}
}

/*UpdateGKECredentialInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type UpdateGKECredentialInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *UpdateGKECredentialInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/gkecredentials/{name}][%d] updateGKECredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateGKECredentialInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *UpdateGKECredentialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
