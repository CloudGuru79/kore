// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// ListAuditEventsReader is a Reader for the ListAuditEvents structure.
type ListAuditEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAuditEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAuditEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListAuditEventsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListAuditEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAuditEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListAuditEventsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListAuditEventsOK creates a ListAuditEventsOK with default headers values
func NewListAuditEventsOK() *ListAuditEventsOK {
	return &ListAuditEventsOK{}
}

/*ListAuditEventsOK handles this case with default header values.

A collection of events from the team
*/
type ListAuditEventsOK struct {
	Payload *models.V1AuditEventList
}

func (o *ListAuditEventsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/audit][%d] listAuditEventsOK  %+v", 200, o.Payload)
}

func (o *ListAuditEventsOK) GetPayload() *models.V1AuditEventList {
	return o.Payload
}

func (o *ListAuditEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1AuditEventList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditEventsBadRequest creates a ListAuditEventsBadRequest with default headers values
func NewListAuditEventsBadRequest() *ListAuditEventsBadRequest {
	return &ListAuditEventsBadRequest{}
}

/*ListAuditEventsBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type ListAuditEventsBadRequest struct {
	Payload *models.ValidationError
}

func (o *ListAuditEventsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/audit][%d] listAuditEventsBadRequest  %+v", 400, o.Payload)
}

func (o *ListAuditEventsBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *ListAuditEventsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditEventsUnauthorized creates a ListAuditEventsUnauthorized with default headers values
func NewListAuditEventsUnauthorized() *ListAuditEventsUnauthorized {
	return &ListAuditEventsUnauthorized{}
}

/*ListAuditEventsUnauthorized handles this case with default header values.

If not authenticated
*/
type ListAuditEventsUnauthorized struct {
}

func (o *ListAuditEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/audit][%d] listAuditEventsUnauthorized ", 401)
}

func (o *ListAuditEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAuditEventsForbidden creates a ListAuditEventsForbidden with default headers values
func NewListAuditEventsForbidden() *ListAuditEventsForbidden {
	return &ListAuditEventsForbidden{}
}

/*ListAuditEventsForbidden handles this case with default header values.

If authenticated but not authorized
*/
type ListAuditEventsForbidden struct {
}

func (o *ListAuditEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/audit][%d] listAuditEventsForbidden ", 403)
}

func (o *ListAuditEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAuditEventsInternalServerError creates a ListAuditEventsInternalServerError with default headers values
func NewListAuditEventsInternalServerError() *ListAuditEventsInternalServerError {
	return &ListAuditEventsInternalServerError{}
}

/*ListAuditEventsInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type ListAuditEventsInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *ListAuditEventsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/audit][%d] listAuditEventsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListAuditEventsInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *ListAuditEventsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
