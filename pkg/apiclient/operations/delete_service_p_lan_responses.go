// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// DeleteServicePLanReader is a Reader for the DeleteServicePLan structure.
type DeleteServicePLanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteServicePLanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteServicePLanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteServicePLanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteServicePLanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteServicePLanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteServicePLanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteServicePLanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteServicePLanOK creates a DeleteServicePLanOK with default headers values
func NewDeleteServicePLanOK() *DeleteServicePLanOK {
	return &DeleteServicePLanOK{}
}

/*DeleteServicePLanOK handles this case with default header values.

Contains the service plan definition
*/
type DeleteServicePLanOK struct {
	Payload *models.V1ServicePlan
}

func (o *DeleteServicePLanOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/serviceplans/{name}][%d] deleteServicePLanOK  %+v", 200, o.Payload)
}

func (o *DeleteServicePLanOK) GetPayload() *models.V1ServicePlan {
	return o.Payload
}

func (o *DeleteServicePLanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ServicePlan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServicePLanBadRequest creates a DeleteServicePLanBadRequest with default headers values
func NewDeleteServicePLanBadRequest() *DeleteServicePLanBadRequest {
	return &DeleteServicePLanBadRequest{}
}

/*DeleteServicePLanBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type DeleteServicePLanBadRequest struct {
	Payload *models.ValidationError
}

func (o *DeleteServicePLanBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/serviceplans/{name}][%d] deleteServicePLanBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteServicePLanBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *DeleteServicePLanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServicePLanUnauthorized creates a DeleteServicePLanUnauthorized with default headers values
func NewDeleteServicePLanUnauthorized() *DeleteServicePLanUnauthorized {
	return &DeleteServicePLanUnauthorized{}
}

/*DeleteServicePLanUnauthorized handles this case with default header values.

If not authenticated
*/
type DeleteServicePLanUnauthorized struct {
}

func (o *DeleteServicePLanUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/serviceplans/{name}][%d] deleteServicePLanUnauthorized ", 401)
}

func (o *DeleteServicePLanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServicePLanForbidden creates a DeleteServicePLanForbidden with default headers values
func NewDeleteServicePLanForbidden() *DeleteServicePLanForbidden {
	return &DeleteServicePLanForbidden{}
}

/*DeleteServicePLanForbidden handles this case with default header values.

If authenticated but not authorized
*/
type DeleteServicePLanForbidden struct {
}

func (o *DeleteServicePLanForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/serviceplans/{name}][%d] deleteServicePLanForbidden ", 403)
}

func (o *DeleteServicePLanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServicePLanNotFound creates a DeleteServicePLanNotFound with default headers values
func NewDeleteServicePLanNotFound() *DeleteServicePLanNotFound {
	return &DeleteServicePLanNotFound{}
}

/*DeleteServicePLanNotFound handles this case with default header values.

the service plan with the given name doesn't exist
*/
type DeleteServicePLanNotFound struct {
}

func (o *DeleteServicePLanNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/serviceplans/{name}][%d] deleteServicePLanNotFound ", 404)
}

func (o *DeleteServicePLanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServicePLanInternalServerError creates a DeleteServicePLanInternalServerError with default headers values
func NewDeleteServicePLanInternalServerError() *DeleteServicePLanInternalServerError {
	return &DeleteServicePLanInternalServerError{}
}

/*DeleteServicePLanInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type DeleteServicePLanInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *DeleteServicePLanInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/serviceplans/{name}][%d] deleteServicePLanInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteServicePLanInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *DeleteServicePLanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
