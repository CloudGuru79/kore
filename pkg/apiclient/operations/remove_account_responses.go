// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// RemoveAccountReader is a Reader for the RemoveAccount structure.
type RemoveAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRemoveAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveAccountOK creates a RemoveAccountOK with default headers values
func NewRemoveAccountOK() *RemoveAccountOK {
	return &RemoveAccountOK{}
}

/*RemoveAccountOK handles this case with default header values.

Contains the account definition
*/
type RemoveAccountOK struct {
	Payload *models.V1beta1AccountManagement
}

func (o *RemoveAccountOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/accountmanagements/{name}][%d] removeAccountOK  %+v", 200, o.Payload)
}

func (o *RemoveAccountOK) GetPayload() *models.V1beta1AccountManagement {
	return o.Payload
}

func (o *RemoveAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1AccountManagement)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveAccountBadRequest creates a RemoveAccountBadRequest with default headers values
func NewRemoveAccountBadRequest() *RemoveAccountBadRequest {
	return &RemoveAccountBadRequest{}
}

/*RemoveAccountBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type RemoveAccountBadRequest struct {
	Payload *models.ValidationError
}

func (o *RemoveAccountBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/accountmanagements/{name}][%d] removeAccountBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveAccountBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *RemoveAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveAccountUnauthorized creates a RemoveAccountUnauthorized with default headers values
func NewRemoveAccountUnauthorized() *RemoveAccountUnauthorized {
	return &RemoveAccountUnauthorized{}
}

/*RemoveAccountUnauthorized handles this case with default header values.

If not authenticated
*/
type RemoveAccountUnauthorized struct {
}

func (o *RemoveAccountUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/accountmanagements/{name}][%d] removeAccountUnauthorized ", 401)
}

func (o *RemoveAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveAccountForbidden creates a RemoveAccountForbidden with default headers values
func NewRemoveAccountForbidden() *RemoveAccountForbidden {
	return &RemoveAccountForbidden{}
}

/*RemoveAccountForbidden handles this case with default header values.

If authenticated but not authorized
*/
type RemoveAccountForbidden struct {
}

func (o *RemoveAccountForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/accountmanagements/{name}][%d] removeAccountForbidden ", 403)
}

func (o *RemoveAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveAccountNotFound creates a RemoveAccountNotFound with default headers values
func NewRemoveAccountNotFound() *RemoveAccountNotFound {
	return &RemoveAccountNotFound{}
}

/*RemoveAccountNotFound handles this case with default header values.

the account with the given name doesn't exist
*/
type RemoveAccountNotFound struct {
}

func (o *RemoveAccountNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/accountmanagements/{name}][%d] removeAccountNotFound ", 404)
}

func (o *RemoveAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveAccountInternalServerError creates a RemoveAccountInternalServerError with default headers values
func NewRemoveAccountInternalServerError() *RemoveAccountInternalServerError {
	return &RemoveAccountInternalServerError{}
}

/*RemoveAccountInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type RemoveAccountInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *RemoveAccountInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/accountmanagements/{name}][%d] removeAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveAccountInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *RemoveAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
