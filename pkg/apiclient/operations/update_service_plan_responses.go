// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// UpdateServicePlanReader is a Reader for the UpdateServicePlan structure.
type UpdateServicePlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServicePlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateServicePlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServicePlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateServicePlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateServicePlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateServicePlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateServicePlanOK creates a UpdateServicePlanOK with default headers values
func NewUpdateServicePlanOK() *UpdateServicePlanOK {
	return &UpdateServicePlanOK{}
}

/*UpdateServicePlanOK handles this case with default header values.

Contains the service plan definition
*/
type UpdateServicePlanOK struct {
	Payload *models.V1ServicePlan
}

func (o *UpdateServicePlanOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/serviceplans/{name}][%d] updateServicePlanOK  %+v", 200, o.Payload)
}

func (o *UpdateServicePlanOK) GetPayload() *models.V1ServicePlan {
	return o.Payload
}

func (o *UpdateServicePlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ServicePlan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServicePlanBadRequest creates a UpdateServicePlanBadRequest with default headers values
func NewUpdateServicePlanBadRequest() *UpdateServicePlanBadRequest {
	return &UpdateServicePlanBadRequest{}
}

/*UpdateServicePlanBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type UpdateServicePlanBadRequest struct {
	Payload *models.ValidationError
}

func (o *UpdateServicePlanBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/serviceplans/{name}][%d] updateServicePlanBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServicePlanBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateServicePlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServicePlanUnauthorized creates a UpdateServicePlanUnauthorized with default headers values
func NewUpdateServicePlanUnauthorized() *UpdateServicePlanUnauthorized {
	return &UpdateServicePlanUnauthorized{}
}

/*UpdateServicePlanUnauthorized handles this case with default header values.

If not authenticated
*/
type UpdateServicePlanUnauthorized struct {
}

func (o *UpdateServicePlanUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/serviceplans/{name}][%d] updateServicePlanUnauthorized ", 401)
}

func (o *UpdateServicePlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServicePlanForbidden creates a UpdateServicePlanForbidden with default headers values
func NewUpdateServicePlanForbidden() *UpdateServicePlanForbidden {
	return &UpdateServicePlanForbidden{}
}

/*UpdateServicePlanForbidden handles this case with default header values.

If authenticated but not authorized
*/
type UpdateServicePlanForbidden struct {
}

func (o *UpdateServicePlanForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/serviceplans/{name}][%d] updateServicePlanForbidden ", 403)
}

func (o *UpdateServicePlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServicePlanInternalServerError creates a UpdateServicePlanInternalServerError with default headers values
func NewUpdateServicePlanInternalServerError() *UpdateServicePlanInternalServerError {
	return &UpdateServicePlanInternalServerError{}
}

/*UpdateServicePlanInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type UpdateServicePlanInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *UpdateServicePlanInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/serviceplans/{name}][%d] updateServicePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateServicePlanInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *UpdateServicePlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
