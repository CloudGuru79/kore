// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// DeleteServiceKindReader is a Reader for the DeleteServiceKind structure.
type DeleteServiceKindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteServiceKindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteServiceKindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteServiceKindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteServiceKindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteServiceKindForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteServiceKindNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteServiceKindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteServiceKindOK creates a DeleteServiceKindOK with default headers values
func NewDeleteServiceKindOK() *DeleteServiceKindOK {
	return &DeleteServiceKindOK{}
}

/*DeleteServiceKindOK handles this case with default header values.

Contains the service kind definition
*/
type DeleteServiceKindOK struct {
	Payload *models.V1ServiceKind
}

func (o *DeleteServiceKindOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/servicekinds/{name}][%d] deleteServiceKindOK  %+v", 200, o.Payload)
}

func (o *DeleteServiceKindOK) GetPayload() *models.V1ServiceKind {
	return o.Payload
}

func (o *DeleteServiceKindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ServiceKind)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceKindBadRequest creates a DeleteServiceKindBadRequest with default headers values
func NewDeleteServiceKindBadRequest() *DeleteServiceKindBadRequest {
	return &DeleteServiceKindBadRequest{}
}

/*DeleteServiceKindBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type DeleteServiceKindBadRequest struct {
	Payload *models.ValidationError
}

func (o *DeleteServiceKindBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/servicekinds/{name}][%d] deleteServiceKindBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteServiceKindBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *DeleteServiceKindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceKindUnauthorized creates a DeleteServiceKindUnauthorized with default headers values
func NewDeleteServiceKindUnauthorized() *DeleteServiceKindUnauthorized {
	return &DeleteServiceKindUnauthorized{}
}

/*DeleteServiceKindUnauthorized handles this case with default header values.

If not authenticated
*/
type DeleteServiceKindUnauthorized struct {
}

func (o *DeleteServiceKindUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/servicekinds/{name}][%d] deleteServiceKindUnauthorized ", 401)
}

func (o *DeleteServiceKindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServiceKindForbidden creates a DeleteServiceKindForbidden with default headers values
func NewDeleteServiceKindForbidden() *DeleteServiceKindForbidden {
	return &DeleteServiceKindForbidden{}
}

/*DeleteServiceKindForbidden handles this case with default header values.

If authenticated but not authorized
*/
type DeleteServiceKindForbidden struct {
}

func (o *DeleteServiceKindForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/servicekinds/{name}][%d] deleteServiceKindForbidden ", 403)
}

func (o *DeleteServiceKindForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServiceKindNotFound creates a DeleteServiceKindNotFound with default headers values
func NewDeleteServiceKindNotFound() *DeleteServiceKindNotFound {
	return &DeleteServiceKindNotFound{}
}

/*DeleteServiceKindNotFound handles this case with default header values.

the service kind with the given name doesn't exist
*/
type DeleteServiceKindNotFound struct {
}

func (o *DeleteServiceKindNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/servicekinds/{name}][%d] deleteServiceKindNotFound ", 404)
}

func (o *DeleteServiceKindNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServiceKindInternalServerError creates a DeleteServiceKindInternalServerError with default headers values
func NewDeleteServiceKindInternalServerError() *DeleteServiceKindInternalServerError {
	return &DeleteServiceKindInternalServerError{}
}

/*DeleteServiceKindInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type DeleteServiceKindInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *DeleteServiceKindInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/servicekinds/{name}][%d] deleteServiceKindInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteServiceKindInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *DeleteServiceKindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
