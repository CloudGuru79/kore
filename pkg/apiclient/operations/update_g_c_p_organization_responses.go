// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// UpdateGCPOrganizationReader is a Reader for the UpdateGCPOrganization structure.
type UpdateGCPOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGCPOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateGCPOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateGCPOrganizationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateGCPOrganizationOK creates a UpdateGCPOrganizationOK with default headers values
func NewUpdateGCPOrganizationOK() *UpdateGCPOrganizationOK {
	return &UpdateGCPOrganizationOK{}
}

/*UpdateGCPOrganizationOK handles this case with default header values.

Contains the former team definition from the kore
*/
type UpdateGCPOrganizationOK struct {
	Payload *models.V1alpha1Organization
}

func (o *UpdateGCPOrganizationOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/organizations/{name}][%d] updateGCPOrganizationOK  %+v", 200, o.Payload)
}

func (o *UpdateGCPOrganizationOK) GetPayload() *models.V1alpha1Organization {
	return o.Payload
}

func (o *UpdateGCPOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1alpha1Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGCPOrganizationDefault creates a UpdateGCPOrganizationDefault with default headers values
func NewUpdateGCPOrganizationDefault(code int) *UpdateGCPOrganizationDefault {
	return &UpdateGCPOrganizationDefault{
		_statusCode: code,
	}
}

/*UpdateGCPOrganizationDefault handles this case with default header values.

A generic API error containing the cause of the error
*/
type UpdateGCPOrganizationDefault struct {
	_statusCode int

	Payload *models.ApiserverError
}

// Code gets the status code for the update g c p organization default response
func (o *UpdateGCPOrganizationDefault) Code() int {
	return o._statusCode
}

func (o *UpdateGCPOrganizationDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/organizations/{name}][%d] UpdateGCPOrganization default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateGCPOrganizationDefault) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *UpdateGCPOrganizationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
