// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetServiceProviderReader is a Reader for the GetServiceProvider structure.
type GetServiceProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceProviderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetServiceProviderUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServiceProviderForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServiceProviderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServiceProviderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServiceProviderOK creates a GetServiceProviderOK with default headers values
func NewGetServiceProviderOK() *GetServiceProviderOK {
	return &GetServiceProviderOK{}
}

/*GetServiceProviderOK handles this case with default header values.

Contains the service provider definition
*/
type GetServiceProviderOK struct {
	Payload *models.V1ServiceProvider
}

func (o *GetServiceProviderOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceproviders/{name}][%d] getServiceProviderOK  %+v", 200, o.Payload)
}

func (o *GetServiceProviderOK) GetPayload() *models.V1ServiceProvider {
	return o.Payload
}

func (o *GetServiceProviderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ServiceProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceProviderUnauthorized creates a GetServiceProviderUnauthorized with default headers values
func NewGetServiceProviderUnauthorized() *GetServiceProviderUnauthorized {
	return &GetServiceProviderUnauthorized{}
}

/*GetServiceProviderUnauthorized handles this case with default header values.

If not authenticated
*/
type GetServiceProviderUnauthorized struct {
}

func (o *GetServiceProviderUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceproviders/{name}][%d] getServiceProviderUnauthorized ", 401)
}

func (o *GetServiceProviderUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceProviderForbidden creates a GetServiceProviderForbidden with default headers values
func NewGetServiceProviderForbidden() *GetServiceProviderForbidden {
	return &GetServiceProviderForbidden{}
}

/*GetServiceProviderForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetServiceProviderForbidden struct {
}

func (o *GetServiceProviderForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceproviders/{name}][%d] getServiceProviderForbidden ", 403)
}

func (o *GetServiceProviderForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceProviderNotFound creates a GetServiceProviderNotFound with default headers values
func NewGetServiceProviderNotFound() *GetServiceProviderNotFound {
	return &GetServiceProviderNotFound{}
}

/*GetServiceProviderNotFound handles this case with default header values.

the service provider with the given name doesn't exist
*/
type GetServiceProviderNotFound struct {
}

func (o *GetServiceProviderNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceproviders/{name}][%d] getServiceProviderNotFound ", 404)
}

func (o *GetServiceProviderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceProviderInternalServerError creates a GetServiceProviderInternalServerError with default headers values
func NewGetServiceProviderInternalServerError() *GetServiceProviderInternalServerError {
	return &GetServiceProviderInternalServerError{}
}

/*GetServiceProviderInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetServiceProviderInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetServiceProviderInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceproviders/{name}][%d] getServiceProviderInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServiceProviderInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetServiceProviderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
