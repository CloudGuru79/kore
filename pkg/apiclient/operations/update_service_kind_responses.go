// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// UpdateServiceKindReader is a Reader for the UpdateServiceKind structure.
type UpdateServiceKindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServiceKindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateServiceKindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServiceKindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateServiceKindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateServiceKindForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateServiceKindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateServiceKindOK creates a UpdateServiceKindOK with default headers values
func NewUpdateServiceKindOK() *UpdateServiceKindOK {
	return &UpdateServiceKindOK{}
}

/*UpdateServiceKindOK handles this case with default header values.

Contains the service kind definition
*/
type UpdateServiceKindOK struct {
	Payload *models.V1ServiceKind
}

func (o *UpdateServiceKindOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/servicekinds/{name}][%d] updateServiceKindOK  %+v", 200, o.Payload)
}

func (o *UpdateServiceKindOK) GetPayload() *models.V1ServiceKind {
	return o.Payload
}

func (o *UpdateServiceKindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ServiceKind)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceKindBadRequest creates a UpdateServiceKindBadRequest with default headers values
func NewUpdateServiceKindBadRequest() *UpdateServiceKindBadRequest {
	return &UpdateServiceKindBadRequest{}
}

/*UpdateServiceKindBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type UpdateServiceKindBadRequest struct {
	Payload *models.ValidationError
}

func (o *UpdateServiceKindBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/servicekinds/{name}][%d] updateServiceKindBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServiceKindBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateServiceKindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceKindUnauthorized creates a UpdateServiceKindUnauthorized with default headers values
func NewUpdateServiceKindUnauthorized() *UpdateServiceKindUnauthorized {
	return &UpdateServiceKindUnauthorized{}
}

/*UpdateServiceKindUnauthorized handles this case with default header values.

If not authenticated
*/
type UpdateServiceKindUnauthorized struct {
}

func (o *UpdateServiceKindUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/servicekinds/{name}][%d] updateServiceKindUnauthorized ", 401)
}

func (o *UpdateServiceKindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceKindForbidden creates a UpdateServiceKindForbidden with default headers values
func NewUpdateServiceKindForbidden() *UpdateServiceKindForbidden {
	return &UpdateServiceKindForbidden{}
}

/*UpdateServiceKindForbidden handles this case with default header values.

If authenticated but not authorized
*/
type UpdateServiceKindForbidden struct {
}

func (o *UpdateServiceKindForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/servicekinds/{name}][%d] updateServiceKindForbidden ", 403)
}

func (o *UpdateServiceKindForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceKindInternalServerError creates a UpdateServiceKindInternalServerError with default headers values
func NewUpdateServiceKindInternalServerError() *UpdateServiceKindInternalServerError {
	return &UpdateServiceKindInternalServerError{}
}

/*UpdateServiceKindInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type UpdateServiceKindInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *UpdateServiceKindInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/servicekinds/{name}][%d] updateServiceKindInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateServiceKindInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *UpdateServiceKindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
