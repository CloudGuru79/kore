// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// UpdateEKSCredentialsReader is a Reader for the UpdateEKSCredentials structure.
type UpdateEKSCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEKSCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEKSCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateEKSCredentialsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateEKSCredentialsOK creates a UpdateEKSCredentialsOK with default headers values
func NewUpdateEKSCredentialsOK() *UpdateEKSCredentialsOK {
	return &UpdateEKSCredentialsOK{}
}

/*UpdateEKSCredentialsOK handles this case with default header values.

Contains the former team definition from the kore
*/
type UpdateEKSCredentialsOK struct {
	Payload *models.V1alpha1EKSCredentials
}

func (o *UpdateEKSCredentialsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/ekscredentials/{name}][%d] updateEKSCredentialsOK  %+v", 200, o.Payload)
}

func (o *UpdateEKSCredentialsOK) GetPayload() *models.V1alpha1EKSCredentials {
	return o.Payload
}

func (o *UpdateEKSCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1alpha1EKSCredentials)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEKSCredentialsDefault creates a UpdateEKSCredentialsDefault with default headers values
func NewUpdateEKSCredentialsDefault(code int) *UpdateEKSCredentialsDefault {
	return &UpdateEKSCredentialsDefault{
		_statusCode: code,
	}
}

/*UpdateEKSCredentialsDefault handles this case with default header values.

A generic API error containing the cause of the error
*/
type UpdateEKSCredentialsDefault struct {
	_statusCode int

	Payload *models.ApiserverError
}

// Code gets the status code for the update e k s credentials default response
func (o *UpdateEKSCredentialsDefault) Code() int {
	return o._statusCode
}

func (o *UpdateEKSCredentialsDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/ekscredentials/{name}][%d] UpdateEKSCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateEKSCredentialsDefault) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *UpdateEKSCredentialsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
