// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// AddTeamMemberReader is a Reader for the AddTeamMember structure.
type AddTeamMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTeamMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddTeamMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddTeamMemberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddTeamMemberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddTeamMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddTeamMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddTeamMemberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddTeamMemberOK creates a AddTeamMemberOK with default headers values
func NewAddTeamMemberOK() *AddTeamMemberOK {
	return &AddTeamMemberOK{}
}

/*AddTeamMemberOK handles this case with default header values.

The user has been successfully added to the team
*/
type AddTeamMemberOK struct {
	Payload *models.V1TeamMember
}

func (o *AddTeamMemberOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/members/{user}][%d] addTeamMemberOK  %+v", 200, o.Payload)
}

func (o *AddTeamMemberOK) GetPayload() *models.V1TeamMember {
	return o.Payload
}

func (o *AddTeamMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1TeamMember)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamMemberBadRequest creates a AddTeamMemberBadRequest with default headers values
func NewAddTeamMemberBadRequest() *AddTeamMemberBadRequest {
	return &AddTeamMemberBadRequest{}
}

/*AddTeamMemberBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type AddTeamMemberBadRequest struct {
	Payload *models.ValidationErrValidation
}

func (o *AddTeamMemberBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/members/{user}][%d] addTeamMemberBadRequest  %+v", 400, o.Payload)
}

func (o *AddTeamMemberBadRequest) GetPayload() *models.ValidationErrValidation {
	return o.Payload
}

func (o *AddTeamMemberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationErrValidation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamMemberUnauthorized creates a AddTeamMemberUnauthorized with default headers values
func NewAddTeamMemberUnauthorized() *AddTeamMemberUnauthorized {
	return &AddTeamMemberUnauthorized{}
}

/*AddTeamMemberUnauthorized handles this case with default header values.

If not authenticated
*/
type AddTeamMemberUnauthorized struct {
}

func (o *AddTeamMemberUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/members/{user}][%d] addTeamMemberUnauthorized ", 401)
}

func (o *AddTeamMemberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTeamMemberForbidden creates a AddTeamMemberForbidden with default headers values
func NewAddTeamMemberForbidden() *AddTeamMemberForbidden {
	return &AddTeamMemberForbidden{}
}

/*AddTeamMemberForbidden handles this case with default header values.

If authenticated but not authorized
*/
type AddTeamMemberForbidden struct {
}

func (o *AddTeamMemberForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/members/{user}][%d] addTeamMemberForbidden ", 403)
}

func (o *AddTeamMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTeamMemberNotFound creates a AddTeamMemberNotFound with default headers values
func NewAddTeamMemberNotFound() *AddTeamMemberNotFound {
	return &AddTeamMemberNotFound{}
}

/*AddTeamMemberNotFound handles this case with default header values.

Team does not exist
*/
type AddTeamMemberNotFound struct {
}

func (o *AddTeamMemberNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/members/{user}][%d] addTeamMemberNotFound ", 404)
}

func (o *AddTeamMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTeamMemberInternalServerError creates a AddTeamMemberInternalServerError with default headers values
func NewAddTeamMemberInternalServerError() *AddTeamMemberInternalServerError {
	return &AddTeamMemberInternalServerError{}
}

/*AddTeamMemberInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type AddTeamMemberInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *AddTeamMemberInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/teams/{team}/members/{user}][%d] addTeamMemberInternalServerError  %+v", 500, o.Payload)
}

func (o *AddTeamMemberInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *AddTeamMemberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
