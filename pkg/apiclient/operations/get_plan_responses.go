// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetPlanReader is a Reader for the GetPlan structure.
type GetPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPlanOK creates a GetPlanOK with default headers values
func NewGetPlanOK() *GetPlanOK {
	return &GetPlanOK{}
}

/*GetPlanOK handles this case with default header values.

Contains the plan definition
*/
type GetPlanOK struct {
	Payload *models.V1Plan
}

func (o *GetPlanOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/plans/{name}][%d] getPlanOK  %+v", 200, o.Payload)
}

func (o *GetPlanOK) GetPayload() *models.V1Plan {
	return o.Payload
}

func (o *GetPlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1Plan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlanUnauthorized creates a GetPlanUnauthorized with default headers values
func NewGetPlanUnauthorized() *GetPlanUnauthorized {
	return &GetPlanUnauthorized{}
}

/*GetPlanUnauthorized handles this case with default header values.

If not authenticated
*/
type GetPlanUnauthorized struct {
}

func (o *GetPlanUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/plans/{name}][%d] getPlanUnauthorized ", 401)
}

func (o *GetPlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPlanForbidden creates a GetPlanForbidden with default headers values
func NewGetPlanForbidden() *GetPlanForbidden {
	return &GetPlanForbidden{}
}

/*GetPlanForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetPlanForbidden struct {
}

func (o *GetPlanForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/plans/{name}][%d] getPlanForbidden ", 403)
}

func (o *GetPlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPlanNotFound creates a GetPlanNotFound with default headers values
func NewGetPlanNotFound() *GetPlanNotFound {
	return &GetPlanNotFound{}
}

/*GetPlanNotFound handles this case with default header values.

the plan with the given name doesn't exist
*/
type GetPlanNotFound struct {
}

func (o *GetPlanNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/plans/{name}][%d] getPlanNotFound ", 404)
}

func (o *GetPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPlanInternalServerError creates a GetPlanInternalServerError with default headers values
func NewGetPlanInternalServerError() *GetPlanInternalServerError {
	return &GetPlanInternalServerError{}
}

/*GetPlanInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetPlanInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetPlanInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/plans/{name}][%d] getPlanInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPlanInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetPlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
