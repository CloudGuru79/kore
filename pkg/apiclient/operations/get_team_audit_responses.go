// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetTeamAuditReader is a Reader for the GetTeamAudit structure.
type GetTeamAuditReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamAuditReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamAuditOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTeamAuditNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTeamAuditInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTeamAuditOK creates a GetTeamAuditOK with default headers values
func NewGetTeamAuditOK() *GetTeamAuditOK {
	return &GetTeamAuditOK{}
}

/*GetTeamAuditOK handles this case with default header values.

A collection of audit events against the team
*/
type GetTeamAuditOK struct {
	Payload *models.V1AuditEventList
}

func (o *GetTeamAuditOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/audit][%d] getTeamAuditOK  %+v", 200, o.Payload)
}

func (o *GetTeamAuditOK) GetPayload() *models.V1AuditEventList {
	return o.Payload
}

func (o *GetTeamAuditOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1AuditEventList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamAuditNotFound creates a GetTeamAuditNotFound with default headers values
func NewGetTeamAuditNotFound() *GetTeamAuditNotFound {
	return &GetTeamAuditNotFound{}
}

/*GetTeamAuditNotFound handles this case with default header values.

Team does not exist
*/
type GetTeamAuditNotFound struct {
}

func (o *GetTeamAuditNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/audit][%d] getTeamAuditNotFound ", 404)
}

func (o *GetTeamAuditNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTeamAuditInternalServerError creates a GetTeamAuditInternalServerError with default headers values
func NewGetTeamAuditInternalServerError() *GetTeamAuditInternalServerError {
	return &GetTeamAuditInternalServerError{}
}

/*GetTeamAuditInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetTeamAuditInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetTeamAuditInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/audit][%d] getTeamAuditInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTeamAuditInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetTeamAuditInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
