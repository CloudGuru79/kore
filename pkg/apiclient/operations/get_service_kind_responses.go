// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetServiceKindReader is a Reader for the GetServiceKind structure.
type GetServiceKindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceKindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceKindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetServiceKindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServiceKindForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServiceKindNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServiceKindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServiceKindOK creates a GetServiceKindOK with default headers values
func NewGetServiceKindOK() *GetServiceKindOK {
	return &GetServiceKindOK{}
}

/*GetServiceKindOK handles this case with default header values.

Contains the service kind definition
*/
type GetServiceKindOK struct {
	Payload *models.V1ServiceKind
}

func (o *GetServiceKindOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/servicekinds/{name}][%d] getServiceKindOK  %+v", 200, o.Payload)
}

func (o *GetServiceKindOK) GetPayload() *models.V1ServiceKind {
	return o.Payload
}

func (o *GetServiceKindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ServiceKind)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceKindUnauthorized creates a GetServiceKindUnauthorized with default headers values
func NewGetServiceKindUnauthorized() *GetServiceKindUnauthorized {
	return &GetServiceKindUnauthorized{}
}

/*GetServiceKindUnauthorized handles this case with default header values.

If not authenticated
*/
type GetServiceKindUnauthorized struct {
}

func (o *GetServiceKindUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/servicekinds/{name}][%d] getServiceKindUnauthorized ", 401)
}

func (o *GetServiceKindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceKindForbidden creates a GetServiceKindForbidden with default headers values
func NewGetServiceKindForbidden() *GetServiceKindForbidden {
	return &GetServiceKindForbidden{}
}

/*GetServiceKindForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetServiceKindForbidden struct {
}

func (o *GetServiceKindForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/servicekinds/{name}][%d] getServiceKindForbidden ", 403)
}

func (o *GetServiceKindForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceKindNotFound creates a GetServiceKindNotFound with default headers values
func NewGetServiceKindNotFound() *GetServiceKindNotFound {
	return &GetServiceKindNotFound{}
}

/*GetServiceKindNotFound handles this case with default header values.

the service kind with the given name doesn't exist
*/
type GetServiceKindNotFound struct {
}

func (o *GetServiceKindNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/servicekinds/{name}][%d] getServiceKindNotFound ", 404)
}

func (o *GetServiceKindNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceKindInternalServerError creates a GetServiceKindInternalServerError with default headers values
func NewGetServiceKindInternalServerError() *GetServiceKindInternalServerError {
	return &GetServiceKindInternalServerError{}
}

/*GetServiceKindInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetServiceKindInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetServiceKindInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/servicekinds/{name}][%d] getServiceKindInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServiceKindInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetServiceKindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
