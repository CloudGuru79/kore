// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// DeleteServiceReader is a Reader for the DeleteService structure.
type DeleteServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteServiceOK creates a DeleteServiceOK with default headers values
func NewDeleteServiceOK() *DeleteServiceOK {
	return &DeleteServiceOK{}
}

/*DeleteServiceOK handles this case with default header values.

Contains the former service definition from the kore
*/
type DeleteServiceOK struct {
	Payload *models.V1Service
}

func (o *DeleteServiceOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/teams/{team}/services/{name}][%d] deleteServiceOK  %+v", 200, o.Payload)
}

func (o *DeleteServiceOK) GetPayload() *models.V1Service {
	return o.Payload
}

func (o *DeleteServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1Service)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceUnauthorized creates a DeleteServiceUnauthorized with default headers values
func NewDeleteServiceUnauthorized() *DeleteServiceUnauthorized {
	return &DeleteServiceUnauthorized{}
}

/*DeleteServiceUnauthorized handles this case with default header values.

If not authenticated
*/
type DeleteServiceUnauthorized struct {
}

func (o *DeleteServiceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/teams/{team}/services/{name}][%d] deleteServiceUnauthorized ", 401)
}

func (o *DeleteServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServiceForbidden creates a DeleteServiceForbidden with default headers values
func NewDeleteServiceForbidden() *DeleteServiceForbidden {
	return &DeleteServiceForbidden{}
}

/*DeleteServiceForbidden handles this case with default header values.

If authenticated but not authorized
*/
type DeleteServiceForbidden struct {
}

func (o *DeleteServiceForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/teams/{team}/services/{name}][%d] deleteServiceForbidden ", 403)
}

func (o *DeleteServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServiceNotFound creates a DeleteServiceNotFound with default headers values
func NewDeleteServiceNotFound() *DeleteServiceNotFound {
	return &DeleteServiceNotFound{}
}

/*DeleteServiceNotFound handles this case with default header values.

the service with the given name doesn't exist
*/
type DeleteServiceNotFound struct {
}

func (o *DeleteServiceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/teams/{team}/services/{name}][%d] deleteServiceNotFound ", 404)
}

func (o *DeleteServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServiceInternalServerError creates a DeleteServiceInternalServerError with default headers values
func NewDeleteServiceInternalServerError() *DeleteServiceInternalServerError {
	return &DeleteServiceInternalServerError{}
}

/*DeleteServiceInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type DeleteServiceInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *DeleteServiceInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/teams/{team}/services/{name}][%d] deleteServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteServiceInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *DeleteServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
