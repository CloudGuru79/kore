// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// ListTeamAuditReader is a Reader for the ListTeamAudit structure.
type ListTeamAuditReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTeamAuditReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTeamAuditOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListTeamAuditUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListTeamAuditForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListTeamAuditNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListTeamAuditInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListTeamAuditOK creates a ListTeamAuditOK with default headers values
func NewListTeamAuditOK() *ListTeamAuditOK {
	return &ListTeamAuditOK{}
}

/*ListTeamAuditOK handles this case with default header values.

A collection of audit events against the team
*/
type ListTeamAuditOK struct {
	Payload *models.V1AuditEventList
}

func (o *ListTeamAuditOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/audit][%d] listTeamAuditOK  %+v", 200, o.Payload)
}

func (o *ListTeamAuditOK) GetPayload() *models.V1AuditEventList {
	return o.Payload
}

func (o *ListTeamAuditOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1AuditEventList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTeamAuditUnauthorized creates a ListTeamAuditUnauthorized with default headers values
func NewListTeamAuditUnauthorized() *ListTeamAuditUnauthorized {
	return &ListTeamAuditUnauthorized{}
}

/*ListTeamAuditUnauthorized handles this case with default header values.

If not authenticated
*/
type ListTeamAuditUnauthorized struct {
}

func (o *ListTeamAuditUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/audit][%d] listTeamAuditUnauthorized ", 401)
}

func (o *ListTeamAuditUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListTeamAuditForbidden creates a ListTeamAuditForbidden with default headers values
func NewListTeamAuditForbidden() *ListTeamAuditForbidden {
	return &ListTeamAuditForbidden{}
}

/*ListTeamAuditForbidden handles this case with default header values.

If authenticated but not authorized
*/
type ListTeamAuditForbidden struct {
}

func (o *ListTeamAuditForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/audit][%d] listTeamAuditForbidden ", 403)
}

func (o *ListTeamAuditForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListTeamAuditNotFound creates a ListTeamAuditNotFound with default headers values
func NewListTeamAuditNotFound() *ListTeamAuditNotFound {
	return &ListTeamAuditNotFound{}
}

/*ListTeamAuditNotFound handles this case with default header values.

Team does not exist
*/
type ListTeamAuditNotFound struct {
}

func (o *ListTeamAuditNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/audit][%d] listTeamAuditNotFound ", 404)
}

func (o *ListTeamAuditNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListTeamAuditInternalServerError creates a ListTeamAuditInternalServerError with default headers values
func NewListTeamAuditInternalServerError() *ListTeamAuditInternalServerError {
	return &ListTeamAuditInternalServerError{}
}

/*ListTeamAuditInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type ListTeamAuditInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *ListTeamAuditInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/audit][%d] listTeamAuditInternalServerError  %+v", 500, o.Payload)
}

func (o *ListTeamAuditInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *ListTeamAuditInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
