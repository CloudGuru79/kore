// Code generated by go-swagger; DO NOT EDIT.

package apimodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1GithubIDP v1 github ID p
//
// swagger:model v1.GithubIDP
type V1GithubIDP struct {

	// client ID
	// Required: true
	ClientID *string `json:"clientID"`

	// client secret
	// Required: true
	ClientSecret *string `json:"clientSecret"`

	// orgs
	// Required: true
	Orgs []string `json:"orgs"`
}

// Validate validates this v1 github ID p
func (m *V1GithubIDP) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientSecret(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrgs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1GithubIDP) validateClientID(formats strfmt.Registry) error {

	if err := validate.Required("clientID", "body", m.ClientID); err != nil {
		return err
	}

	return nil
}

func (m *V1GithubIDP) validateClientSecret(formats strfmt.Registry) error {

	if err := validate.Required("clientSecret", "body", m.ClientSecret); err != nil {
		return err
	}

	return nil
}

func (m *V1GithubIDP) validateOrgs(formats strfmt.Registry) error {

	if err := validate.Required("orgs", "body", m.Orgs); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1GithubIDP) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1GithubIDP) UnmarshalBinary(b []byte) error {
	var res V1GithubIDP
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
