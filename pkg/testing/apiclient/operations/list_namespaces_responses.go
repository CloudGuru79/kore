// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/testing/apimodels"
)

// ListNamespacesReader is a Reader for the ListNamespaces structure.
type ListNamespacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNamespacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListNamespacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListNamespacesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListNamespacesOK creates a ListNamespacesOK with default headers values
func NewListNamespacesOK() *ListNamespacesOK {
	return &ListNamespacesOK{}
}

/*ListNamespacesOK handles this case with default header values.

Contains the former definition from the kore
*/
type ListNamespacesOK struct {
	Payload *apimodels.V1NamespaceClaimList
}

func (o *ListNamespacesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/namespaceclaims][%d] listNamespacesOK  %+v", 200, o.Payload)
}

func (o *ListNamespacesOK) GetPayload() *apimodels.V1NamespaceClaimList {
	return o.Payload
}

func (o *ListNamespacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(apimodels.V1NamespaceClaimList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNamespacesInternalServerError creates a ListNamespacesInternalServerError with default headers values
func NewListNamespacesInternalServerError() *ListNamespacesInternalServerError {
	return &ListNamespacesInternalServerError{}
}

/*ListNamespacesInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type ListNamespacesInternalServerError struct {
	Payload *apimodels.ApiserverError
}

func (o *ListNamespacesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/teams/{team}/namespaceclaims][%d] listNamespacesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListNamespacesInternalServerError) GetPayload() *apimodels.ApiserverError {
	return o.Payload
}

func (o *ListNamespacesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(apimodels.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
