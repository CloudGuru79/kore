/**
 * Appvia Kore API
 * Kore API provides the frontend API for the Appvia Kore (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1alpha1Infra model module.
 * @module model/V1alpha1Infra
 * @version 0.0.1
 */
class V1alpha1Infra {
    /**
     * Constructs a new <code>V1alpha1Infra</code>.
     * @alias module:model/V1alpha1Infra
     */
    constructor() { 
        
        V1alpha1Infra.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1alpha1Infra</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1alpha1Infra} obj Optional instance to populate.
     * @return {module:model/V1alpha1Infra} The populated <code>V1alpha1Infra</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1alpha1Infra();

            if (data.hasOwnProperty('ipv4EgressAddresses')) {
                obj['ipv4EgressAddresses'] = ApiClient.convertToType(data['ipv4EgressAddresses'], ['String']);
            }
            if (data.hasOwnProperty('privateSubnetIDs')) {
                obj['privateSubnetIDs'] = ApiClient.convertToType(data['privateSubnetIDs'], ['String']);
            }
            if (data.hasOwnProperty('publicSubnetIDs')) {
                obj['publicSubnetIDs'] = ApiClient.convertToType(data['publicSubnetIDs'], ['String']);
            }
            if (data.hasOwnProperty('securityGroupIDs')) {
                obj['securityGroupIDs'] = ApiClient.convertToType(data['securityGroupIDs'], ['String']);
            }
        }
        return obj;
    }

/**
     * @return {Array.<String>}
     */
    getIpv4EgressAddresses() {
        return this.ipv4EgressAddresses;
    }

    /**
     * @param {Array.<String>} ipv4EgressAddresses
     */
    setIpv4EgressAddresses(ipv4EgressAddresses) {
        this['ipv4EgressAddresses'] = ipv4EgressAddresses;
    }
/**
     * @return {Array.<String>}
     */
    getPrivateSubnetIDs() {
        return this.privateSubnetIDs;
    }

    /**
     * @param {Array.<String>} privateSubnetIDs
     */
    setPrivateSubnetIDs(privateSubnetIDs) {
        this['privateSubnetIDs'] = privateSubnetIDs;
    }
/**
     * @return {Array.<String>}
     */
    getPublicSubnetIDs() {
        return this.publicSubnetIDs;
    }

    /**
     * @param {Array.<String>} publicSubnetIDs
     */
    setPublicSubnetIDs(publicSubnetIDs) {
        this['publicSubnetIDs'] = publicSubnetIDs;
    }
/**
     * @return {Array.<String>}
     */
    getSecurityGroupIDs() {
        return this.securityGroupIDs;
    }

    /**
     * @param {Array.<String>} securityGroupIDs
     */
    setSecurityGroupIDs(securityGroupIDs) {
        this['securityGroupIDs'] = securityGroupIDs;
    }

}

/**
 * @member {Array.<String>} ipv4EgressAddresses
 */
V1alpha1Infra.prototype['ipv4EgressAddresses'] = undefined;

/**
 * @member {Array.<String>} privateSubnetIDs
 */
V1alpha1Infra.prototype['privateSubnetIDs'] = undefined;

/**
 * @member {Array.<String>} publicSubnetIDs
 */
V1alpha1Infra.prototype['publicSubnetIDs'] = undefined;

/**
 * @member {Array.<String>} securityGroupIDs
 */
V1alpha1Infra.prototype['securityGroupIDs'] = undefined;






export default V1alpha1Infra;

